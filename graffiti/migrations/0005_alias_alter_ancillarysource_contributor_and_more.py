# Generated by Django 4.1.7 on 2024-10-16 19:07

import django.db.models.deletion
import prose.fields
import taggit_selectize.managers
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
        ("graffiti", "0004_remove_site_date_alter_person_date_of_birth_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Alias",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                (
                    "alias_type",
                    models.CharField(
                        choices=[("ALIAS", "Alias"), ("WALL", "Wall name")],
                        max_length=5,
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="ancillarysource",
            name="contributor",
            field=models.CharField(
                blank=True,
                help_text="An entity responsible for making contributions to the resource.",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="ancillarysource",
            name="creator",
            field=models.CharField(
                blank=True,
                help_text="An entity primarily responsible for making the resource.",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="ancillarysource",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="ancillarysource",
            name="graffiti_id",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="graffiti.graffitiwall",
                verbose_name="Associated wall",
            ),
        ),
        migrations.AlterField(
            model_name="ancillarysource",
            name="tags",
            field=taggit_selectize.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AlterField(
            model_name="archive",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="graffitiphoto",
            name="graffiti_id",
            field=models.ForeignKey(
                help_text="Select the graffiti wall this photo belongs to.",
                on_delete=django.db.models.deletion.CASCADE,
                to="graffiti.graffitiwall",
                verbose_name="Graffiti wall",
            ),
        ),
        migrations.AlterField(
            model_name="graffitiphoto",
            name="related_graffiti",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="related_graffiti",
                to="graffiti.graffitiwall",
            ),
        ),
        migrations.AlterField(
            model_name="graffitiwall",
            name="description",
            field=prose.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="graffitiwall",
            name="tags",
            field=taggit_selectize.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="tags",
            field=taggit_selectize.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AlterField(
            model_name="site",
            name="tags",
            field=taggit_selectize.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
    ]
